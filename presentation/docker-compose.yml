version: '3.3'

networks:
  business-intelligence-net:
    driver: bridge

volumes:
    grafana_data: {}

services:

## --------------------------------------------- DASHBOARD SECTION --------------------------------------------
  # Container Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "0"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
    restart: unless-stopped
    links:
      - postgres
    ports: 
      - "4050:4050"  
    expose:
      - 3000
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    networks:
      - business-intelligence-net
## ------------------------------------------- END DASHBOARD SECTION ------------------------------------------


## --------------------------------------------- POSTGRES SECTION ---------------------------------------------
  # Database Container (postgres)
  postgres:
    container_name: pg_container
    build: ./postgres
    restart: always
    environment:
      POSTGRES_USER: shoc
      POSTGRES_PASSWORD: JustKeepSwimming
      POSTGRES_DB: test_db
      PGAGENT_ENABLED: 'true' # Must be string
      PGAGENT_USER: pgagent
      PGAGENT_PASSWORD: secret
      PGAGENT_DB: pgagent
      PGAGENT_LOG_LEVEL: 2
    ports:
      - "5432:5432"
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - business-intelligence-net

  # Container of PGAdmin (web-based admin tool for postgres database)
  pgadmin:
    container_name: pg_admin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: shoc@shoc.us
      PGADMIN_DEFAULT_PASSWORD: JustKeepSwimming
    ports:
      - "3031:80"
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    networks:
      - business-intelligence-net
## ------------------------------------------- END POSTGRES SECTION ---------------------------------------


## --------------------------------------------- SUPERSET SECTION ---------------------------------------------
  superset:
    container_name: apache_superset
    image: apache/superset:latest
    restart: always
    ports:
      - "8088:8088"
    volumes:
      - ./superset_config.py:/app/superset_config.py
    networks:
      - business-intelligence-net
    # command: >
    #   sh -c "superset db upgrade &&
    #   superset init &&
    #   superset fab create-admin --username shoc --firstname Superset --lastname Admin --email admin@superset.com --password JustKeepSwimming"

## --------------------------------------------- END SUPERSET SECTION ---------------------------------------------
## --------------------------------------------- Drill SECTION ---------------------------------------------
  drill:
    container_name: apache_drill 
    image: apache/drill:latest
    ports:
      - "8047:8047"
    networks: 
      - business-intelligence-net
    stdin_open: true  # add this line
                      # do not override entrypoint: or command:
                      # include volumes: if required

## --------------------------------------------- END Drill SECTION ---------------------------------------------
## ----------------------------------------- SYSTEM SECTION -----------------------------------------------
    
# CADDY is used to have a single sign-on for all of our applications.  Excluding pgAdmin,
  #   because pgAdmin refuses to play nice.
  caddy:
    image: caddy:2.3.0
    container_name: caddy
    ports:
      - "3000:3000"  # Grafana's Port
    volumes:
      - ./caddy:/etc/caddy
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-JDJhJDE0JE91S1FrN0Z0VEsyWmhrQVpON1VzdHVLSDkyWHdsN0xNbEZYdnNIZm1pb2d1blg4Y09mL0ZP}
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    networks:
      - business-intelligence-net

## --------------------------------------- END SYSTEM SECTION ----------------------------------
## ----------------------------------------- MongoDB SECTION -----------------------------------------------
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: shoc
      MONGO_INITDB_ROOT_PASSWORD: JustKeepSwimming
    ports:
     - 27017:27017
    volumes:
     - ./mongo/data:/data/db 
    networks:
     - business-intelligence-net
    
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: shoc
      ME_CONFIG_MONGODB_ADMINPASSWORD: JustKeepSwimming
      ME_CONFIG_MONGODB_SERVER: mongo
    ports:
      - 8081:8081  
    networks:
      - business-intelligence-net
## --------------------------------------- END MongoDB SECTION ----------------------------------